// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  userName  String   @unique
  fullname  String?  @default("name")
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())


  ProductInfo ProductInfo[]
}

//ProductInfo table relates 1:1 Admin
//ProductInfo table relates 1:1 ProductPublicId
model ProductInfo {
  id               Int             @id @default(autoincrement())
  productName      String
  productType      String
  productGenderUse String
  productPrice     String
  productFilePath  String
  productDescription String?
  productQuantity  Int
  productValue     Int?
  admin            Admin           @relation(fields: [adminUsername], references: [userName])
  adminUsername    String
  mainPhoto ProductMainPhoto?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @default(now())

}


model ProductMainPhoto {
  id Int @id @default(autoincrement())
  photoLink String
  product ProductInfo @relation(fields: [productId], references: [id])
  productId Int @unique
}

model ProductPublicId {
  id          Int          @id @default(autoincrement())
  publicId    String          @unique
}


model Customer {
  customerId Int  @id @default(autoincrement())
  fullname String
  email   String @unique
  phoneNumber String @unique
  orders Orders?
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}
// cutomers -> orders -> orderedItem

model Orders {
  orderId Int @id @default(autoincrement())
  productInfoId Int
  customer Customer @relation(fields: [customerId], references: [customerId])
  customerId Int @unique
  orderItems OrderedItems? 
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}


model OrderedItems {
  orderItemsId Int @id @default(autoincrement())
  OrderId Orders @relation(fields: [order], references: [orderId])
  order Int @unique
  productId Int
  quantity Int
}